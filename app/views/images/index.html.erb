<% page_title("Images") %>
<%#= javascript_include_tag "jquery"  %>
<%= javascript_include_tag "/jquery.uploadify-v2.1.0/swfobject.js"  %>
<%= javascript_include_tag "/jquery.uploadify-v2.1.0/jquery.uploadify.v2.1.0.min.js"  %>
<%= javascript_include_tag "jquery.jeditable.mini.js" %>
<%= javascript_include_tag "jquery.colorbox-min.js" %>
<%= javascript_include_tag "jquery.colobox.js" %>

<div id="list_images">
  <img alt="Processing..." id ="main_spinner" src ="/images/spinner.gif" style="display:none"/>
  <% @images.each do|image| %>
    <%= render :partial => "image", :object => image, :locals => {:edit => true}  %>
  <% end %>
</div>

<%
dialog_file_description = 'Select images'
allowed_extensions = [:jpg, :jpeg, :gif, :png]
max_size = 1.megabyte
allow_multiple_files = true
url = images_path
image_field = '#image_image'
%>
<%- session_key_name = ActionController::Base.session_options[:key] -%>
<%= javascript_tag "window._token = '#{form_authenticity_token}'" %>

<script type="text/javascript">

<% if protect_against_forgery? -%>
    var AUTH_TOKEN = '<%= form_authenticity_token %>';

    $j(document).ready(function() {

      $j("a[rel='cimg']").colorbox({transition:"fade", slideshow:true});

      $j('<%= image_field %>').uploadify({
        uploader      : '/jquery.uploadify-v2.1.0/uploadify.swf',
        script        : '<%= url %>',
        fileDataName  : $j('#image_uploader input:file')[0].name, // Extract correct name of upload field from form field
        cancelImg     : '/jquery.uploadify-v2.1.0/cancel.png',
        buttonText    : 'Browse Images',
        //buttonImg     : '/images/browse-background.png',
        fileDesc      : '<%= dialog_file_description %> (<%= allowed_extensions.collect { |ext| "*.#{ext}" }.join(';') %>)',
        fileExt       : '<%= allowed_extensions.collect { |ext| "*.#{ext}" }.join(';') %>',
        sizeLimit     : <%= max_size %>,
        multi         : <%= allow_multiple_files %>,
        onComplete    : function(event, queueID, fileObj, response, data) { var data = eval('(' + response + ')');$j.getScript(data.image)},
        onAllComplete : function(event, data){
          $j('#uploadify_cancel').hide('blind');
          $j('#uploadify_submit').show('blind');
        },
        onSelect: function(event, queueID, fileObj){
          if (fileObj.size > <%= max_size %>) {
            alert('The image' + fileObj.name + ' is too large.')
            return false;
          }
        },
        onSelectOnce : function(event, data) {
          if (data.fileCount > 0) {
            //$j('#uploadify_submit').show();
          }
        },
        onClearQueue : function(event) {
          alert("Q cleared")
        },
        scriptData  : {
          'format': 'json',
          '<%= session_key_name %>' : encodeURIComponent('<%= u cookies[session_key_name] %>'),
          'authenticity_token'  : encodeURIComponent('<%= u form_authenticity_token if protect_against_forgery? %>'),
          '<%= @imageible_name + '_id'   %>':'<%=@imageible.id%>'
        }
      });

      $j('#uploadify_submit').click(function(event){
        event.preventDefault();
        if ($j('<%= image_field %>').uploadifySettings('queueSize') < 1) {
          alert("Nothing to upload")
          return;
        }
        $j('<%= image_field %>').uploadifyUpload();
        $j('#uploadify_submit').hide();
        $j('#uploadify_cancel').show();
      });

      $j('#uploadify_cancel').click(function(event){
        event.preventDefault();
        $j('<%= image_field %>').uploadifyClearQueue();
        $j('#uploadify_cancel').hide();
        $j('#uploadify_submit').show();
      });

      

    });

  </script>
<% end -%>

<% form_for([@imageible, @imageible.images.build], :id => 'image_upload', :html => { :multipart => true}) do |f| %>
  <% if protect_against_forgery? -%>
    <%= f.hidden_field :authenticity_token, :value => (u form_authenticity_token) -%>
  <% end -%>
  <%= f.error_messages %>
  <div id="image_uploader">
    <%= f.file_field :image, :id => "image_image" %>
    <%= f.hidden_field @imageible.class.name.downcase + "_id", :value => @imageible.id %>
  </div>
  <div id="image_submit">
    <a href="#" class="button" id="uploadify_submit" >Upload</a><a href="#" id="uploadify_cancel" style="display:none">Cancel</a>
  </div>
<% end %>

<%= link_to "Back to Profile",  polymorphic_path(@imageible) %>